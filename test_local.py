#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å PostgreSQL
"""

import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def test_environment():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("=== –¢–ï–°–¢ –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø ===")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    bot_token = os.getenv('BOT_TOKEN')
    db_host = os.getenv('DB_HOST', 'localhost')
    db_port = os.getenv('DB_PORT', '5432')
    db_name = os.getenv('DB_NAME', 'videobot_db')
    db_user = os.getenv('DB_USER', 'videobot_user')
    db_password = os.getenv('DB_PASSWORD')
    
    print(f"BOT_TOKEN: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if bot_token else '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}")
    print(f"DB_HOST: {db_host}")
    print(f"DB_PORT: {db_port}")
    print(f"DB_NAME: {db_name}")
    print(f"DB_USER: {db_user}")
    print(f"DB_PASSWORD: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if db_password else '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}")
    
    return bool(bot_token and db_password)

def test_postgres_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL"""
    print("\n=== –¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö POSTGRESQL ===")
    
    try:
        import psycopg2
        print("‚úÖ psycopg2 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è
        from config import DATABASE_CONFIG
        
        conn = psycopg2.connect(
            host=DATABASE_CONFIG['host'],
            port=DATABASE_CONFIG['port'],
            database='postgres',  # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–∏—Å—Ç–µ–º–Ω–æ–π –ë–î
            user=DATABASE_CONFIG['user'],
            password=DATABASE_CONFIG['password']
        )
        
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL —É—Å–ø–µ—à–Ω–æ!")
        conn.close()
        return True
        
    except ImportError:
        print("‚ùå psycopg2 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: pip install psycopg2-binary")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        print("\nüí° –†–ï–®–ï–ù–ò–ï:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PostgreSQL")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å PostgreSQL")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env —Ñ–∞–π–ª–µ")
        return False

def test_database_manager():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º DatabaseManager"""
    print("\n=== –¢–ï–°–¢ DATABASE MANAGER ===")
    
    try:
        from database_postgres import DatabaseManager
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä
        db_manager = DatabaseManager()
        print("‚úÖ DatabaseManager —Å–æ–∑–¥–∞–Ω")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ë–î
        db_manager.init_database()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_user_id = 12345
        db_manager.add_or_update_user(
            user_id=test_user_id,
            username="test_user",
            first_name="Test",
            last_name="User"
        )
        print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = db_manager.get_user(test_user_id)
        if user:
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {user['first_name']}")
        else:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db_manager.conn.execute("DELETE FROM users WHERE user_id = %s", (test_user_id,))
        db_manager.conn.commit()
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ DatabaseManager: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –õ–û–ö–ê–õ–¨–ù–û–ô –ù–ê–°–¢–†–û–ô–ö–ò")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env_ok = test_environment()
    
    # –¢–µ—Å—Ç 2: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL
    postgres_ok = test_postgres_connection()
    
    # –¢–µ—Å—Ç 3: DatabaseManager (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ PostgreSQL —Ä–∞–±–æ—Ç–∞–µ—Ç)
    db_ok = False
    if postgres_ok:
        db_ok = test_database_manager()
    
    # –ò—Ç–æ–≥–∏
    print("\n" + "=" * 50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: {'‚úÖ' if env_ok else '‚ùå'}")
    print(f"PostgreSQL: {'‚úÖ' if postgres_ok else '‚ùå'}")
    print(f"DatabaseManager: {'‚úÖ' if db_ok else '‚ùå'}")
    
    if env_ok and postgres_ok and db_ok:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò! –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞.")
        print("\n–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. python bot.py - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞")
        print("2. python admin_panel.py - –∑–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏")
    else:
        print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –±–æ—Ç–∞.")
        
        if not env_ok:
            print("\nüîß –ò—Å–ø—Ä–∞–≤—å—Ç–µ .env —Ñ–∞–π–ª")
        if not postgres_ok:
            print("\nüîß –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ PostgreSQL")

if __name__ == "__main__":
    main()
